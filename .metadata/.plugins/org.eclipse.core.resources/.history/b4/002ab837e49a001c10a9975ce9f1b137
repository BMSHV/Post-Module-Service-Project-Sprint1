package com.springboot.sprint1.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.client.RestTemplate;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
import com.springboot.sprint1.model.User;

public class UserService {
	
	@Autowired
	private RestTemplate restTemplate;

     @HystrixCommand(fallbackMethod = "UserServiceFallBack")

	public User getUserDetails(int causeId) {

		String resourceUrl = "http://ecom-customer-service/ecom/customer/get/" + causeId;

		User User = restTemplate.getForObject(resourceUrl, User.class);

		return User;

	}

	@SuppressWarnings("unused")
	private User UserServiceFallBack(int causeId) {
		
		User user = new User();
		user.setUserFullName("");
		user.setUserAddress("");
		user.setUserId(0);
		user.setUserMobile("");
		user.setUserAccountNumber(0);
		user.setUserFundAmount(0);
		user.setUserDescription("");
		user.setUserIdProof("");
		user.setUserEmail("");
		user.setUserName("");
		

		System.out.println("User Service is down!!! fallback route enabled...");
		return user;

	}


}
